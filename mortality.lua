--[[
 _                             _     _        _  _    ___   ___   ___  _ 
(_)_ __   ___ __ _ _ __   __ _| |__ | | ___ _| || |_ / _ \ / _ \ / _ \/ |
| | '_ \ / __/ _` | '_ \ / _` | '_ \| |/ _ \_  ..  _| | | | | | | | | | |
| | | | | (_| (_| | |_) | (_| | |_) | |  __/_      _| |_| | |_| | |_| | |
|_|_| |_|\___\__,_| .__/ \__,_|_.__/|_|\___| |_||_|  \___/ \___/ \___/|_|
                  |_|                                                    
]]--

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30)if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v69=v2(v0(v30,16));if v19 then local v77=v5(v69,v19);v19=nil;return v77;else return v69;end end end);local function v20(v31,v32,v33)if v33 then local v70=(v31/(2^(v32-(2 -1))))%((5 -3)^(((v33-(1 -0)) -(v32-(2 -1))) + (620 -(499 + 56 + 64)))) ;return v70-(v70%(932 -(857 + 74))) ;else local v71=(809 -241) -((1432 -(68 + 997)) + 201) ;local v72;while true do if (v71==((2197 -(226 + 1044)) -(214 + 713))) then v72=(1 + 1)^(v32-(1 + 0)) ;return (((v31%(v72 + v72))>=v72) and (878 -(282 + 595))) or (1637 -(1523 + (496 -382))) ;end end end end local function v21()local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22()local v35,v36=v1(v16,v18,v18 + (119 -(32 + 85)) );v18=v18 + 2 ;return (v36 * (251 + 5)) + v35 ;end local function v23()local v37=0 + 0 + 0 ;local v38;local v39;local v40;local v41;while true do if (v37==(958 -(892 + 65))) then return (v41 * (40022563 -23245347)) + (v40 * 65536) + (v39 * (472 -(530 -314))) + v38 ;end if (v37==(0 -0)) then v38,v39,v40,v41=v1(v16,v18,v18 + 3 + 0 );v18=v18 + (354 -(87 + 263)) ;v37=181 -(67 + 113) ;end end end local function v24()local v42=v23();local v43=v23();local v44=3 -2 ;local v45=(v20(v43,953 -(802 + 150) ,53 -33 ) * (2^(57 -25))) + v42 ;local v46=v20(v43,16 + (19 -14) ,1028 -(915 + 82) );local v47=((v20(v43,32)==(2 -1)) and  -1) or (1 + 0) ;if (v46==(0 -0)) then if (v45==(1187 -(1069 + 118))) then return v47 * ((442 -(416 + 26)) -0) ;else v46=1 -0 ;v44=0;end elseif (v46==(356 + 1691)) then return ((v45==(0 -(0 -0))) and (v47 * ((1 + 0)/0))) or (v47 * NaN) ;end return v8(v47,v46-(1814 -(368 + 423)) ) * (v44 + (v45/(((3 + 3) -4)^((123 -53) -((448 -(145 + 293)) + 8))))) ;end local function v25(v48)local v49;if  not v48 then local v73=430 -(44 + 386) ;while true do if (v73==(1486 -((2136 -(116 + 1022)) + 488))) then v48=v23();if (v48==(0 + (0 -0))) then return "";end break;end end end v49=v3(v16,v18,(v18 + v48) -(1 + 0) );v18=v18 + v48 ;local v50={};for v67=773 -(201 + 571) , #v49 do v50[v67]=v2(v1(v3(v49,v67,v67)));end return v6(v50);end local v26=v23;local function v27(...)return {...},v12("#",...);end local function v28()local v51=0;local v52;local v53;local v54;local v55;local v56;local v57;local v58;local v59;while true do if (v51~=(1275 -(388 + 886))) then else v54=nil;v55=nil;v51=2 -0 ;end if (v51==(1 + 3)) then while true do if (v52~=(561 -(306 + 254))) then else local v93=0 + 0 ;local v94;while true do if (v93~=0) then else v94=0;while true do if (v94==1) then v52=3 -1 ;break;end if (v94~=(1467 -(899 + 568))) then else local v109=0 + 0 ;while true do if (v109==1) then v94=2 -1 ;break;end if ((603 -(268 + 335))==v109) then v55=nil;v56=nil;v109=291 -(60 + 230) ;end end end end break;end end end if (v52==2) then local v95=572 -(426 + 146) ;while true do if (v95==(0 + 0)) then local v108=1456 -(282 + 1174) ;while true do if (v108~=(812 -(569 + 242))) then else v95=1;break;end if (0~=v108) then else v57=nil;v58=nil;v108=2 -1 ;end end end if (v95~=1) then else v52=3;break;end end end if (v52==0) then local v96=0;while true do if (v96==(1 + 0)) then v52=1025 -(706 + 318) ;break;end if (v96~=0) then else v53=1251 -(721 + 530) ;v54=nil;v96=1272 -(945 + 326) ;end end end if (v52==3) then v59=nil;while true do local v102=0;local v103;while true do if (v102==0) then v103=0 -0 ;while true do if (v103==(0 + 0)) then local v111=0;while true do if (v111~=(700 -(271 + 429))) then else if (v53==2) then local v117=0;while true do if ((1 + 0)==v117) then for v124=1,v23() do local v125=1500 -(1408 + 92) ;local v126;while true do if (v125~=(1086 -(461 + 625))) then else v126=v21();if (v20(v126,1289 -(993 + 295) ,1)==(0 + 0)) then local v269=1171 -(418 + 753) ;local v270;local v271;local v272;local v273;local v274;while true do if (v269==(1 + 0)) then v272=nil;v273=nil;v269=1 + 1 ;end if (v269~=(0 + 0)) then else v270=0 + 0 ;v271=nil;v269=1;end if (v269~=(531 -(406 + 123))) then else v274=nil;while true do if (v270==1) then local v356=0;while true do if (v356~=(1770 -(1749 + 20))) then else v270=2;break;end if (v356==0) then v273=nil;v274=nil;v356=1;end end end if (v270==(1 + 1)) then while true do if (v271==1) then local v376=1322 -(1249 + 73) ;local v377;local v378;while true do if (v376~=(1 + 0)) then else while true do if (v377~=0) then else v378=1145 -(466 + 679) ;while true do if (v378~=0) then else v274={v22(),v22(),nil,nil};if (v272==0) then local v428=0 -0 ;local v429;local v430;while true do if (v428==(1900 -(106 + 1794))) then v429=0 + 0 ;v430=nil;v428=1 + 0 ;end if (v428==1) then while true do if (v429~=(0 -0)) then else v430=0 -0 ;while true do if (v430==0) then v274[117 -(4 + 110) ]=v22();v274[588 -(57 + 527) ]=v22();break;end end break;end end break;end end elseif (v272==1) then v274[3]=v23();elseif (v272==(1429 -(41 + 1386))) then v274[3]=v23() -(2^16) ;elseif (v272~=(106 -(17 + 86))) then else local v436=0 + 0 ;local v437;while true do if (v436==(0 -0)) then v437=0 -0 ;while true do if (v437~=0) then else v274[169 -(122 + 44) ]=v23() -(2^16) ;v274[6 -2 ]=v22();break;end end break;end end end v378=1;end if (v378==1) then v271=2;break;end end break;end end break;end if (v376==(0 -0)) then v377=0 + 0 ;v378=nil;v376=1 + 0 ;end end end if ((5 -2)==v271) then if (v20(v273,3,68 -(30 + 35) )==(1 + 0)) then v274[1261 -(1043 + 214) ]=v59[v274[15 -11 ]];end v54[v124]=v274;break;end if (v271==0) then local v380=0;local v381;while true do if (v380~=(1212 -(323 + 889))) then else v381=0 -0 ;while true do if (v381~=(581 -(361 + 219))) then else v271=1;break;end if (0==v381) then local v418=0;while true do if (0==v418) then local v423=0;while true do if (v423==(320 -(53 + 267))) then v272=v20(v126,1 + 1 ,3);v273=v20(v126,4,419 -(15 + 398) );v423=983 -(18 + 964) ;end if (v423==1) then v418=1;break;end end end if (v418==1) then v381=3 -2 ;break;end end end end break;end end end if (v271~=(2 + 0)) then else local v382=0 + 0 ;local v383;while true do if (v382==(850 -(20 + 830))) then v383=0;while true do if (v383~=(1 + 0)) then else v271=3;break;end if (v383~=(126 -(116 + 10))) then else if (v20(v273,1 + 0 ,1)~=1) then else v274[740 -(542 + 196) ]=v59[v274[2]];end if (v20(v273,3 -1 ,2)~=(1 + 0)) then else v274[3]=v59[v274[3]];end v383=1 + 0 ;end end break;end end end end break;end if ((0 + 0)==v270) then local v357=0 -0 ;while true do if (0~=v357) then else v271=0 -0 ;v272=nil;v357=1;end if (v357~=1) then else v270=1;break;end end end end break;end end end break;end end end v53=3;break;end if (v117~=(1551 -(1126 + 425))) then else for v127=406 -(118 + 287) ,v58 do local v128=0 -0 ;local v129;local v130;local v131;local v132;while true do if (v128==(1122 -(118 + 1003))) then local v257=0 -0 ;while true do if (v257~=(378 -(142 + 235))) then else v128=9 -7 ;break;end if ((0 + 0)~=v257) then else v131=nil;v132=nil;v257=1;end end end if (v128==(979 -(553 + 424))) then while true do if (v129~=(0 -0)) then else v130=0;v131=nil;v129=1;end if (v129~=1) then else v132=nil;while true do if (v130~=(1 + 0)) then else if (v131==(1 + 0)) then v132=v21()~=(0 + 0) ;elseif (v131==2) then v132=v24();elseif (v131==(2 + 1)) then v132=v25();end v59[v127]=v132;break;end if (0~=v130) then else local v313=0 + 0 ;while true do if ((0 -0)==v313) then local v369=0 -0 ;while true do if (v369==(2 -1)) then v313=1 + 0 ;break;end if (0==v369) then v131=v21();v132=nil;v369=4 -3 ;end end end if ((754 -(239 + 514))~=v313) then else v130=1 + 0 ;break;end end end end break;end end break;end if (v128==(1329 -(797 + 532))) then local v258=0;while true do if (v258==0) then v129=0;v130=nil;v258=1;end if (v258~=1) then else v128=1 + 0 ;break;end end end end end v57[2 + 1 ]=v21();v117=1;end end end if (v53==(6 -3)) then local v118=0;local v119;while true do if (v118~=(1202 -(373 + 829))) then else v119=0;while true do local v133=731 -(476 + 255) ;local v134;while true do if ((1130 -(369 + 761))==v133) then v134=0 + 0 ;while true do if (v134==0) then if (0~=v119) then else local v285=0 -0 ;local v286;while true do if (v285~=(0 -0)) then else v286=238 -(64 + 174) ;while true do if (v286==(1 + 0)) then v119=1;break;end if (v286==0) then for v388=1 -0 ,v23() do v55[v388-(337 -(144 + 192)) ]=v28();end for v390=217 -(42 + 174) ,v23() do v56[v390]=v23();end v286=1;end end break;end end end if (1==v119) then return v57;end break;end end break;end end end break;end end end v111=1;end if (v111==(1 + 0)) then v103=1 + 0 ;break;end end end if (v103==(1 + 0)) then if (v53==(1505 -(363 + 1141))) then local v112=1580 -(1183 + 397) ;while true do if (v112==1) then v59={};v53=5 -3 ;break;end if (v112~=(0 + 0)) then else local v120=0 + 0 ;while true do if (v120~=1) then else v112=1976 -(1913 + 62) ;break;end if (v120==0) then v57={v54,v55,nil,v56};v58=v23();v120=1;end end end end end if (0==v53) then local v113=1933 -(565 + 1368) ;local v114;while true do if (v113==0) then v114=0;while true do if (v114==(0 -0)) then local v122=1661 -(1477 + 184) ;local v123;while true do if (v122==(0 -0)) then v123=0 + 0 ;while true do if (1~=v123) then else v114=857 -(564 + 292) ;break;end if (0~=v123) then else local v275=0;while true do if (v275==(1 -0)) then v123=2 -1 ;break;end if (v275==(304 -(244 + 60))) then v54={};v55={};v275=1 + 0 ;end end end end break;end end end if (v114==(477 -(41 + 435))) then v56={};v53=1;break;end end break;end end end break;end end break;end end end break;end end break;end if (v51==3) then v58=nil;v59=nil;v51=1005 -(938 + 63) ;end if (v51==0) then v52=0;v53=nil;v51=1 + 0 ;end if (v51==(1127 -(936 + 189))) then v56=nil;v57=nil;v51=1 + 2 ;end end end local function v29(v60,v61,v62)local v63=0;local v64;local v65;local v66;while true do if (v63==1) then v66=v60[3];return function(...)local v78=1;local v79= -1;local v80={...};local v81=v12("#",...) -1 ;local function v82()local v83=v64;local v84=v65;local v85=v66;local v86=v27;local v87={};local v88={};local v89={};for v97=1613 -(1565 + 48) ,v81 do if (((1003 + 620)<=1957) and (v97>=v85)) then v87[v97-v85 ]=v80[v97 + (1139 -(782 + 356)) ];else v89[v97]=v80[v97 + (268 -(176 + 91)) ];end end local v90=(v81-v85) + (2 -1) ;local v91;local v92;while true do local v98=0 -0 ;local v99;while true do if ((((5894 -(14 + 376)) -(975 + 117))==(6287 -(157 + 1718))) and (v98==(0 + 0))) then v99=0 -0 ;while true do if (((5982 -4232)>=(1860 -(697 + 321))) and ((2 -1)==v99)) then if ((4372>(3919 -2069)) and (v92<=(57 -32))) then if ((((157 -66) + 141)<(532 + 289)) and (v92<=((20 + 2) -(10 + 0)))) then if (((1388 -870)<(2129 -((943 -621) + 905))) and (v92<=((464 + 152) -(602 + 9)))) then if ((2994>(2047 -(449 + 740))) and (v92<=2)) then if ((v92<=0) or ((4627 -(826 + 46))<=(1862 -(245 + 702)))) then for v167=v91[2],v91[3] do v89[v167]=nil;end elseif (((12469 -8523)>(1204 + 2539)) and (v92==(1899 -(260 + 1638)))) then local v172=(518 -(23 + 55)) -(382 + 58) ;local v173;local v174;local v175;while true do if ((v172==(3 -2)) or ((1110 + 225)>=((16188 -9357) -(2353 + 1172)))) then v175=nil;while true do if ((((12931 + 1468) -9555)>(3458 -(902 + 303))) and (0==v173)) then local v287=0 -0 ;while true do if ((452==(1088 -636)) and ((0 + 0)==v287)) then v174=v91[1692 -(1121 + (881 -312)) ];v175=v89[v91[217 -(7 + 15 + 192) ]];v287=684 -(483 + 200) ;end if ((v287==1) or ((6020 -(1404 + 59))<(5711 -3624))) then v173=1 -0 ;break;end end end if ((3874==(4639 -(468 + 297))) and (v173==1)) then v89[v174 + (563 -(334 + 228)) ]=v175;v89[v174]=v175[v91[(914 -(652 + 249)) -9 ]];break;end end break;end if (((0 -0)==v172) or (1938>(8950 -4015))) then v173=0;v174=nil;v172=(2 -1) + 0 ;end end else local v176=0;local v177;local v178;local v179;while true do if (((236 -((2009 -(708 + 1160)) + 95))==v176) or ((4180 + 75)<(8810 -5387))) then v177=0;v178=nil;v176=1;end if ((((9484 -5990) -2040)<=(584 + 1907)) and (v176==(2 -1))) then v179=nil;while true do if ((v177==(0 + 0)) or ((2165 + 1992)<=(3947 -1144))) then local v291=0 + 0 ;while true do if (((5016 -(92 + 71))>=(1473 + 1509)) and (v291==(0 -0))) then v178=v91[2 -0 ];v179=v89[v178];v291=766 -((601 -(10 + 17)) + 191) ;end if (((3410 + 724)>(8410 -5053)) and (v291==(1 + 0))) then v177=(191 + 659) -(254 + 595) ;break;end end end if ((v177==(127 -(55 + 71))) or ((4501 -1084)<2534)) then for v314=v178 + (1791 -(573 + 1217)) ,v79 do v7(v179,v89[v314]);end break;end end break;end end end elseif ((v92<=((1740 -(1400 + 332)) -5)) or (2722<=(13 + 151))) then v89[v91[2 -0 ]]=v91[3];elseif ((v92==(943 -(714 + 225))) or (2408<(6163 -4054))) then v89[v91[2 -0 ]][v91[1 + 2 ]]=v91[5 -1 ];else v89[v91[(1549 -741) -(118 + 688) ]][v91[(1959 -(242 + 1666)) -(25 + 23) ]]=v89[v91[1 + 3 ]];end elseif ((v92<=(1894 -(927 + 411 + 548))) or (33==1455)) then if ((v92<=(20 -14)) or (((431 + 744) -(14 + 2 + 716))>=(7750 -3735))) then local v137=97 -(11 + 86) ;local v138;local v139;local v140;while true do if ((3382>(404 -238)) and ((286 -(175 + 110))==v137)) then v140=nil;while true do if ((v138==(2 -1)) or ((1381 -1101)==(4855 -(503 + 1293)))) then for v284=v139 + 1 ,v91[4] do v140=v140   .. v89[v284] ;end v89[v91[2]]=v140;break;end if (((5253 -3372)>(2233 -(850 + 90))) and ((0 + 0)==v138)) then local v280=1061 -(810 + 251) ;while true do if (((1636 + 721)==(724 + 1633)) and (v280==(1 + 0))) then v138=534 -(43 + 490) ;break;end if (((856 -(711 + 22))==(475 -352)) and (v280==0)) then v139=v91[862 -(240 + 619) ];v140=v89[v139];v280=1 + 0 ;end end end end break;end if ((v137==(0 -0)) or ((70 + 986)>=(5136 -(1344 + 400)))) then v138=405 -(255 + 150) ;v139=nil;v137=1;end end elseif ((v92==((9 -3) + 1)) or ((579 + 502)<(4593 -3518))) then if ((v89[v91[6 -4 ]]<v89[v91[1743 -((1794 -(360 + 1030)) + 1182 + 153) ]]) or (1049>=((13655 -8817) -(183 + 223)))) then v78=v78 + (1 -0) ;else v78=v91[3 -0 ];end elseif ((v89[v91[2]]==v89[v91[3 + 1 ]]) or ((1716 + 3052)<=(1183 -(10 + (1988 -(909 + 752)))))) then v78=v78 + 1 + 0 ;else v78=v91[(1564 -(109 + 1114)) -(118 + 220) ];end elseif ((v92<=(4 + 6)) or (3358<=(1869 -(108 + 341)))) then if ((v92>(5 + 4)) or (3739<=(12704 -9699))) then do return;end elseif ((v91[(2737 -1242) -(711 + 782) ]==v89[v91[7 -3 ]]) or ((2128 -(270 + 199))>=(692 + 1442))) then v78=v78 + 1 ;else v78=v91[1822 -(580 + 1239) ];end elseif ((v92==(32 -(9 + 12))) or ((3118 + 142)<(85 + 2270))) then v89[v91[2]]=v89[v91[3]];else v89[v91[1 + 1 ]]=v89[v91[(249 -(6 + 236)) -4 ]] * v89[v91[4]] ;end elseif ((v92<=(12 + 6)) or ((1836 -(407 + 238 + 522))==(6013 -(1010 + 780)))) then if ((v92<=(15 + 0)) or (1692<(2801 -2213))) then if ((v92<=(38 -25)) or (((5340 + 1293) -(1045 + 791))<(9241 -5590))) then local v141=0 -0 ;local v142;local v143;local v144;local v145;while true do if ((((1193 -687) -(351 + 154))==v141) or (4177>4850)) then v144=nil;v145=nil;v141=(2752 -1176) -(1281 + 293) ;end if ((v141==(268 -(28 + 238))) or ((893 -493)>(2670 -(1381 + 178)))) then while true do if (((2862 + (1322 -(1076 + 57)))>(811 + 194)) and ((1 + 0)==v142)) then v145=nil;while true do if ((3693<=((2485 + 12621) -10724)) and (v143==(0 + 0))) then local v317=470 -(381 + 89) ;local v318;while true do if (((0 + 0)==v317) or ((2220 + (1751 -(579 + 110)))>(7023 -2923))) then v318=0;while true do if ((v318==(1156 -(1074 + 82))) or ((7845 -4265)<((366 + 4262) -(214 + 1570)))) then local v392=1455 -(990 + 412 + 53) ;while true do if ((89<(1851 + 2639)) and ((0 + 0)==v392)) then v144=v91[2 + 0 ];v145={};v392=1;end if ((v392==((2 + 1) -2)) or ((6709 -(1668 + 58))<(2434 -(512 + 114)))) then v318=1;break;end end end if (((9982 -6153)>(7791 -4022)) and (v318==(3 -2))) then v143=1;break;end end break;end end end if (((691 + 794)<=(544 + 2360)) and (v143==(1 + 0))) then for v349=3 -2 , #v88 do local v350=407 -(174 + 233) ;local v351;local v352;while true do if (((6263 -(109 + 1885))==(5738 -(1269 + 200))) and (v350==(0 -0))) then v351=815 -(98 + 717) ;v352=nil;v350=1;end if ((387<=(3608 -(802 + 24))) and ((1 -0)==v350)) then while true do if ((v351==(0 -0)) or ((281 + 1618)<=(705 + 212))) then v352=v88[v349];for v406=0 + 0 , #v352 do local v407=(0 -0) + 0 ;local v408;local v409;local v410;local v411;while true do if ((0==v407) or ((11995 -7683)<=(2921 -2045))) then v408=0 + 0 ;v409=nil;v407=1;end if (((909 + 1323)<=(2142 + 454)) and (v407==1)) then v410=nil;v411=nil;v407=2 + 0 ;end if ((((1717 -738) + 1116)<(5119 -(797 + 636))) and ((9 -7)==v407)) then while true do if ((v408==(1620 -(635 + 792 + 192))) or ((553 + (2216 -(663 + 511)))>=(10387 -5913))) then v411=v409[2 + 0 ];if (((v410==v89) and (v411>=v144)) or ((2094 + 2525)<(3208 -(192 + 134)))) then local v431=0;local v432;while true do if ((v431==((1139 + 137) -(316 + 960))) or (294>=(2689 + 2142))) then v432=0 + 0 ;while true do if (((1876 + 153)<=(11790 -8706)) and (v432==0)) then v145[v411]=v410[v411];v409[1]=v145;break;end end break;end end end break;end if ((v408==0) or (2037==(2971 -(83 + 468)))) then v409=v352[v406];v410=v409[1807 -(1202 + 604) ];v408=1;end end break;end end end break;end end break;end end end break;end end break;end if (((20810 -16352)>(6497 -2593)) and (v142==(0 -0))) then v143=325 -(45 + 280) ;v144=nil;v142=1 + 0 ;end end break;end if (((381 + 55)>=(45 + 78)) and (v141==0)) then v142=0 + 0 ;v143=nil;v141=1 + 0 + 0 ;end end elseif (((925 -425)<(3727 -(340 + 1571))) and (v92==14)) then v89[v91[1 + (2 -1) ]]=v89[v91[3]][v91[1776 -(1733 + 39) ]];else local v189=0 -(0 + 0) ;local v190;local v191;while true do if (((8414 -4840)==(4608 -(125 + 909))) and ((1949 -(1096 + 852))==v189)) then while true do if ((221<390) and (v190==(0 + 0))) then v191=v91[2];do return v13(v89,v191,v191 + v91[3 -0 ] );end break;end end break;end if ((v189==(0 + 0)) or ((2725 -(409 + 103))<=(1657 -((111 -65) + 190)))) then v190=95 -(51 + 44) ;v191=nil;v189=1;end end end elseif (((863 + 2195)<(6177 -(1114 + 203))) and (v92<=(742 -(228 + 498)))) then local v146=v91[1 + 1 ];local v147=v91[3 + 1 ];local v148=v146 + 1 + 1 ;local v149={v89[v146](v89[v146 + 1 ],v89[v148])};for v169=2 -1 ,v147 do v89[v148 + v169 ]=v149[v169];end local v150=v149[1];if (v150 or (1296>=4446)) then local v192=0;local v193;while true do if ((v192==0) or ((3298 -(830 + 1075))>(5013 -(303 + 221)))) then v193=(905 + 364) -(22 + 209 + 1038) ;while true do if ((v193==(0 + 0)) or ((5586 -((893 -(478 + 244)) + 991))<27)) then v89[v148]=v150;v78=v91[3];break;end end break;end end else v78=v78 + (4 -3) ;end elseif ((v92>(45 -28)) or (1997>(9520 -(6222 -(440 + 77))))) then v89[v91[1 + 1 + (0 -0) ]]=v89[v91[3]] + v89[v91[13 -9 ]] ;else local v195=(1556 -(655 + 901)) -0 ;local v196;local v197;local v198;local v199;while true do if (((5585 -2120)>(5913 -4000)) and (v195==(1248 -(111 + 1137)))) then v196=158 -(91 + 67) ;v197=nil;v195=(1 + 1) -1 ;end if (((183 + 550)<(2342 -(423 + 77 + 23))) and (v195==(1 + 1))) then while true do if ((v196==(5 -3)) or ((2291 + 1421 + 683)==4755)) then for v319=772 -((1313 -987) + 445) ,v91[17 -13 ] do local v320=0;local v321;while true do if ((v320==0) or ((8449 -4656)<(5529 -3160))) then local v370=711 -(530 + 181) ;while true do if (((881 -(614 + 267))==v370) or ((4116 -(19 + 13))==(430 -165))) then v78=v78 + (2 -1) ;v321=v83[v78];v370=(1447 -(695 + 750)) -1 ;end if ((((3865 -2733) + 3226)==(7664 -3306)) and (v370==(1 -0))) then v320=1813 -(1293 + (800 -281)) ;break;end end end if ((v320==1) or ((6402 -3264)<993)) then if (((8694 -5364)>(9342 -7019)) and (v321[1 -0 ]==(47 -36))) then v199[v319-1 ]={v89,v321[1 + (353 -(285 + 66)) ]};else v199[v319-(2 -1) ]={v61,v321[2 + 1 ]};end v88[ #v88 + (2 -1) ]=v199;break;end end end v89[v91[2]]=v29(v197,v198,v62);break;end if ((v196==(1096 -(709 + 387))) or ((5484 -(673 + 1185))==(11568 -7579))) then local v296=0 -0 ;while true do if ((v296==(0 -0)) or ((656 + 260)==2671)) then v197=v84[v91[3 + 0 ]];v198=nil;v296=1;end if (((366 -94)==272) and (v296==1)) then v196=1 + 0 ;break;end end end if ((4249<=(9648 -4809)) and (v196==((1311 -(682 + 628)) -0))) then v199={};v198=v10({},{__index=function(v322,v323)local v324=1880 -(446 + 1434) ;local v325;local v326;local v327;while true do if ((2777<(4483 -(1040 + 243))) and ((0 -0)==v324)) then v325=1847 -(559 + 208 + 1080) ;v326=nil;v324=1;end if (((2026 -(609 + 1322))<(2411 -(13 + 441))) and ((3 -2)==v324)) then v327=nil;while true do if (((2163 -1337)<(8551 -6834)) and (v325==(0 + 0))) then v326=0;v327=nil;v325=3 -2 ;end if ((1426>=(393 + 712)) and (v325==(1 + 0))) then while true do if ((2754<=(10027 -6648)) and (v326==0)) then local v416=0 + 0 ;local v417;while true do if ((v416==(0 -(299 -(176 + 123)))) or ((2597 + 1330)==(786 + 627))) then v417=0;while true do if ((v417==(0 + 0 + 0)) or ((969 + 185)<=788)) then local v427=0;while true do if ((v427==(0 + 0)) or (1643>(3812 -(153 + 280)))) then v327=v199[v323];return v327[2 -1 ][v327[2 + 0 ]];end end end end break;end end end end break;end end break;end end end,__newindex=function(v328,v329,v330)local v331=0 + 0 ;local v332;while true do if ((v331==(0 + 0 + 0)) or ((2544 + 259)>(3297 + 1252))) then v332=v199[v329];v332[270 -(239 + 30) ][v332[2 -0 ]]=v330;break;end end end});v196=2 + 0 ;end end break;end if ((v195==(668 -(89 + 578))) or ((158 + 62)>=(6282 -3260))) then v198=nil;v199=nil;v195=1051 -(572 + 130 + 347) ;end end end elseif (((381 + 2441)==2822) and (v92<=21)) then if ((v92<=(12 + 7)) or ((1020 + 41)==1857)) then local v151=0 + 0 ;local v152;while true do if ((2760>(1450 -((148 -64) + 2))) and (v151==(0 -(0 -0)))) then v152=v91[2 + 0 ];v89[v152](v89[v152 + (843 -(497 + 345)) ]);break;end end elseif ((v92>(1 + (334 -(306 + 9)))) or (4902<=((2121 -1513) + 2987))) then v89[v91[1 + 1 ]]=v89[v91[1336 -(605 + 728) ]] -v89[v91[4]] ;else v89[v91[2 + 0 ]]=v89[v91[6 -3 ]] + v91[1 + 3 ] ;end elseif ((v92<=23) or (((8738 + 5503) -10389)==(265 + 28))) then if ((v92>(60 -(19 + 19))) or ((1178 + 381)==4588)) then local v202=489 -(457 + 32) ;local v203;local v204;local v205;local v206;while true do if ((v202==1) or (((5441 -3538) + 2581)==788)) then v205=nil;v206=nil;v202=1404 -(832 + 570) ;end if (((4304 + 264)>=(1019 + 2888)) and ((6 -4)==v202)) then while true do if (((601 + 645)<(4266 -((1963 -(1140 + 235)) + 208))) and ((0 -0)==v203)) then v204=1800 -(884 + 916) ;v205=nil;v203=1;end if (((8516 -4448)>=(564 + 260 + 148)) and (1==v203)) then v206=nil;while true do if (((1146 -(232 + 421))<(5782 -(1569 + 320))) and (v204==(1 + 0))) then for v374=v205 + 1 ,v91[1 + 2 ] do v7(v206,v89[v374]);end break;end if ((v204==(0 -0)) or ((2078 -(316 + 289))>=3332)) then local v363=0;while true do if (((2 -1)==v363) or (4051<=1157)) then v204=1 + 0 ;break;end if (((2057 -(611 + 55 + 787))<2881) and (v363==(425 -(360 + 65)))) then local v386=0 + 0 ;while true do if (((254 -(79 + 175))==v386) or ((231 + 669)==(5324 -1947))) then v205=v91[2 + 0 ];v206=v89[v205];v386=2 -1 ;end if ((4459>(1137 -546)) and (v386==1)) then v363=(952 -(33 + 19)) -(503 + 396) ;break;end end end end end end break;end end break;end if (((3579 -(34 + 58 + 89))>=(4645 -2250)) and (0==v202)) then v203=0 + 0 ;v204=nil;v202=1 + 0 ;end end elseif ( not v89[v91[7 -5 ]] or ((299 + 1884)>=(6438 -(10831 -7217)))) then v78=v78 + 1 + 0 ;else v78=v91[2 + 1 ];end elseif (((5896 -(1745 + 2215))==(242 + 1694)) and (v92>(36 -12))) then do return v89[v91[1246 -(485 + 759) ]];end else local v207=0 -0 ;local v208;local v209;local v210;while true do if ((v207==(1190 -(442 + 747))) or ((5967 -(832 + 303))<(8457 -4144))) then v210=nil;while true do if (((5034 -(88 + 858))>(1181 + 2693)) and (v208==(1 + 0))) then while true do if ((4332==(179 + 4153)) and (v209==(789 -(766 + 23)))) then v210=v91[2];do return v89[v210](v13(v89,v210 + (4 -3) ,v79));end break;end end break;end if ((3999>=(3966 -(1000 + 66))) and (v208==(0 -0))) then local v297=0;while true do if (((3 -2)==v297) or (2525>(5137 -(1036 + 37)))) then v208=1 + 0 ;break;end if (((8511 -4140)==(3439 + 932)) and (v297==(689 -(586 + 103)))) then v209=0;v210=nil;v297=1481 -(641 + 839) ;end end end end break;end if ((v207==(913 -(910 + 3))) or (266>(12710 -7724))) then v208=0;v209=nil;v207=1685 -(1466 + 218) ;end end end elseif (((916 + 1075)>=(2073 -(556 + 592))) and (v92<=(14 + 24))) then if ((455<(2861 -(329 + 479))) and (v92<=(885 -(174 + 680)))) then if ((v92<=(95 -67)) or (((156 + 1555) -885)==(3464 + 1387))) then if ((183==((2838 -1916) -(396 + 343))) and (v92<=(3 + 23))) then local v153=1477 -(29 + 1448) ;local v154;local v155;local v156;local v157;local v158;local v159;while true do if (((2548 -(135 + 1254))<=(6735 -4947)) and (v153==(9 -(1495 -(1309 + 179))))) then v158=nil;v159=nil;v153=2 + 1 ;end if ((v153==(1527 -(389 + 1138))) or ((4081 -(102 + 472))>4318)) then v154=0 + 0 ;v155=nil;v153=1 + 0 ;end if ((v153==(1 + 0)) or ((4620 -(320 + (2211 -986)))<=((2298 + 2980) -2313))) then v156=nil;v157=nil;v153=2 + 0 ;end if (((2829 -(157 + 1307))<=2011) and (v153==(1862 -(821 + 1038)))) then while true do if ((v154==(0 -0)) or ((304 + 2472)>(6349 -2774))) then local v281=0 + 0 ;while true do if ((v281==((0 -0) -0)) or ((3580 -(834 + 192))==(306 + 4498))) then v155=0;v156=nil;v281=1 + 0 + 0 ;end if (((56 + 2521)==2577) and (v281==(1 -0))) then v154=305 -(300 + 4) ;break;end end end if ((v154==(1 + 1)) or (6>=1889)) then v159=nil;while true do if (((1324 -818)<=((4788 -2534) -(112 + 250))) and (v155==(1 + 1))) then for v353=v156,v79 do local v354=0 -0 ;local v355;while true do if ((v354==(0 + 0)) or (2008>(1148 + 1070))) then v355=0 + 0 ;while true do if (((188 + 191)<=(3081 + 1066)) and (v355==(1414 -(1001 + 413)))) then v159=v159 + (2 -1) ;v89[v353]=v157[v159];break;end end break;end end end break;end if ((v155==((1759 -876) -(244 + 638))) or ((5207 -(627 + 66))<=(3006 -1997))) then local v333=602 -(512 + (699 -(295 + 314))) ;local v334;while true do if ((v333==(1906 -(1665 + (591 -350)))) or ((4213 -((2335 -(1300 + 662)) + 344))==(538 + 654))) then v334=0;while true do if ((v334==(0 + 0)) or (208==(7804 -(15213 -10368)))) then v79=(v158 + v156) -(1 -0) ;v159=1099 -(35 + 1064) ;v334=1;end if ((4277>=(3068 -(1178 + 577))) and ((1 + 0)==v334)) then v155=4 -2 ;break;end end break;end end end if ((2587<(13 + 3161)) and (v155==0)) then local v335=1236 -(298 + 938) ;while true do if ((v335==(1260 -(233 + 533 + 493))) or ((5786 -((1879 -1243) + 1030))<=(1124 + 1074))) then v155=1 + 0 ;break;end if ((v335==(0 + 0)) or (1596==858)) then local v375=1405 -(851 + 554) ;while true do if (((193 + 25 + (8325 -5323))==(3441 -(55 + 166))) and (v375==(0 + 0))) then v156=v91[1 + 1 ];v157,v158=v86(v89[v156](v89[v156 + ((6 -3) -2) ]));v375=298 -(36 + 261) ;end if ((v375==(1 -(302 -(115 + 187)))) or (1402>3620)) then v335=1369 -(34 + 1334) ;break;end end end end end end break;end if (((1972 + 602)==(990 + 1584)) and (1==v154)) then v157=nil;v158=nil;v154=2 + 0 ;end end break;end end elseif ((((2917 + 164) -(1035 + 248))<(2778 -(20 + 1))) and (v92>(15 + 12))) then local v211=0;local v212;local v213;local v214;while true do if ((v211==(320 -(134 + 185))) or ((1510 -(549 + 584))>(3289 -(314 + 371)))) then v214=nil;while true do if (((1949 -1381)<((7404 -5525) -(478 + (1651 -(160 + 1001))))) and (v212==(1 + 0))) then while true do if ((3285<(5400 -(786 + 386))) and (v213==((0 + 0) -0))) then v214=v91[1381 -(1055 + 224 + 100) ];v89[v214]=v89[v214](v89[v214 + (1341 -(1093 + 247)) ]);break;end end break;end if ((3916>(2958 + (757 -387))) and (0==v212)) then local v298=0;while true do if (((263 + 2237)<3839) and (v298==(3 -2))) then v212=3 -2 ;break;end if (((1442 -935)==507) and (v298==(0 -0))) then v213=0 + 0 ;v214=nil;v298=3 -2 ;end end end end break;end if (((827 -587)<=(2387 + 778)) and (v211==(0 -0))) then v212=0;v213=nil;v211=689 -(364 + 324) ;end end else v62[v91[7 -4 ]]=v89[v91[2]];end elseif (((2001 -1167)>=(267 + (896 -(237 + 121)))) and (v92<=29)) then v89[v91[8 -6 ]]= not v89[v91[4 -1 ]];elseif ((v92>(91 -61)) or (((5977 -(525 + 372)) -(1249 + 19))<(2091 + 225))) then local v217=0 -0 ;local v218;local v219;local v220;local v221;while true do if ((v217==(1086 -(686 + 400))) or ((2081 + 571)<=(2905 -1372))) then v218=229 -(73 + 156) ;v219=nil;v217=(3 -2) + 0 ;end if (((812 -(721 + 90))==v217) or (((183 -(96 + 46)) + 3557)<((5517 -(643 + 134)) -3280))) then v220=nil;v221=nil;v217=2;end if ((v217==2) or ((4586 -(224 + 246))<((697 + 1233) -738))) then while true do if (((0 -(0 -0))==v218) or (3377<=(164 + 739))) then v219=v91[1 + 1 ];v220=v89[v219];v218=1 + 0 ;end if ((3976>=439) and (v218==1)) then v221=v91[3];for v336=(3 -2) -0 ,v221 do v220[v336]=v89[v219 + v336 ];end break;end end break;end end else v89[v91[6 -4 ]]=v61[v91[516 -(203 + 310) ]];end elseif (((5745 -(1238 + 755))==(263 + 3489)) and (v92<=(1568 -(709 + 825)))) then if (((7455 -3409)>(3925 -1230)) and (v92<=32)) then local v161=0;local v162;local v163;while true do if ((v161==(864 -(196 + 668))) or ((13996 -10451)==(6622 -3425))) then v162=833 -(171 + 662) ;v163=nil;v161=94 -(4 + 89) ;end if (((8390 -5996)>373) and (v161==(1 + 0))) then while true do if (((3985 + 170)<=(18587 -14355)) and (((0 -0) + 0)==v162)) then v163=v91[1488 -(35 + 1451) ];v89[v163]=v89[v163](v13(v89,v163 + (1454 -(28 + 1425)) ,v91[(4079 -2083) -(941 + (1771 -(316 + 403))) ]));break;end end break;end end elseif ((v92==33) or ((3434 + 147)==(4987 -(822 + 692)))) then v89[v91[2 -0 ]]=v62[v91[2 + 1 ]];else local v226=297 -(45 + 252) ;local v227;local v228;while true do if ((4995>(3313 + 35)) and (v226==(1 + 0))) then while true do if ((v227==(0 -0)) or (((789 + 398) -((313 -199) + 319))>(5346 -(587 + 1035)))) then v228=v91[2 -0 ];do return v13(v89,v228,v79);end break;end end break;end if (((139 + 78)>=(84 -27)) and (v226==(0 -0))) then local v276=1963 -((1400 -844) + 1407) ;while true do if ((v276==(1207 -(741 + 465))) or (2070>=4037)) then v226=1;break;end if (((3170 -(170 + 295))==(1426 + 1279)) and (v276==(0 + 0))) then v227=0 -(0 + 0) ;v228=nil;v276=1 + 0 ;end end end end end elseif (((40 + 21)==(35 + 26)) and (v92<=((409 + 857) -((3315 -2358) + 273)))) then if ((v92==(10 + 25)) or (699>=(519 + 777))) then local v229=0 -0 ;local v230;local v231;local v232;local v233;while true do if ((v229==2) or ((4698 -2915)>=(11044 -(35474 -28046)))) then while true do if ((v230==(0 -0)) or ((5693 -(389 + 1391))>(2841 + 1686))) then local v303=0 + 0 ;local v304;while true do if (((9962 -5586)>(1768 -(783 + 168))) and (v303==(0 -0))) then v304=0;while true do if ((4861>(811 + 13)) and (v304==0)) then local v387=311 -(309 + 2) ;while true do if ((v387==(0 -0)) or ((2595 -(1090 + 122))>=2131)) then v231=v91[1 + (1 -0) ];v232={v89[v231](v13(v89,v231 + 1 + 0 ,v79))};v387=(65 + 1054) -(628 + (964 -474)) ;end if ((v387==1) or ((337 + 1539)>=(6291 -3750))) then v304=4 -3 ;break;end end end if (((2556 -(431 + 343))<=(7617 -3845)) and (v304==1)) then v230=1;break;end end break;end end end if ((v230==(1 + 0)) or ((13596 -(26172 -17276))<(643 + 170))) then v233=0 + 0 ;for v339=v231,v91[1699 -(556 + 1139) ] do local v340=0;local v341;while true do if ((3199<((4082 -(12 + 5)) -(6 + 9))) and (v340==(0 + 0))) then v341=0 + (0 -0) ;while true do if ((v341==(0 -0)) or ((5120 -(28 + 141))<((3647 -1931) + 2714))) then v233=v233 + (1 -0) ;v89[v339]=v232[v233];break;end end break;end end end break;end end break;end if ((((168 -100) + 6 + 22)==(1413 -(486 + 831))) and (v229==0)) then local v277=0 -0 ;while true do if ((v277==(3 -2)) or ((518 + 2221)>(12673 -8665))) then v229=1264 -(668 + 595) ;break;end if ((v277==0) or ((21 + 2)==(229 + 905))) then v230=0;v231=nil;v277=2 -1 ;end end end if ((v229==1) or ((2983 -(23 + (2240 -(1656 + 317))))>=(6055 -(1129 + 815)))) then local v278=387 -(371 + 16) ;while true do if ((v278==((1560 + 190) -(1326 + 424))) or ((8173 -3857)<=(7841 -5695))) then v232=nil;v233=nil;v278=119 -(88 + 30) ;end if ((v278==(772 -(577 + 143 + 51))) or ((7888 -(11545 -7203))<=(4585 -(421 + 1355)))) then v229=2 -0 ;break;end end end end else local v234=0 + 0 ;local v235;local v236;local v237;local v238;local v239;while true do if (((5987 -((1407 -1121) + 797))>(2520 -(5 + 349))) and (v234==(0 -0))) then v235=(0 -0) -0 ;v236=nil;v234=1;end if ((109>=(1361 -(266 + 1005))) and (v234==(441 -(397 + 42)))) then v239=nil;while true do if ((4978>2905) and (v235==(0 + 0))) then local v305=800 -(16 + 8 + 776) ;while true do if ((v305==(0 -0)) or ((3811 -(222 + 563))<=2280)) then v236=v91[3 -1 ];v237,v238=v86(v89[v236](v13(v89,v236 + 1 + 0 ,v91[3])));v305=191 -(23 + 167) ;end if ((v305==(1799 -(690 + 1108))) or ((597 + (3602 -2546))<=(914 + 194))) then v235=(1117 -268) -((1736 -(561 + 1135)) + (1052 -244)) ;break;end end end if (((479 + (7987 -5557))>(9976 -7367)) and ((2 + 0)==v235)) then for v342=v236,v79 do local v343=0 + 0 ;local v344;while true do if ((((1482 -(507 + 559)) + 341)>194) and (v343==(571 -(47 + 524)))) then v344=(0 -0) + 0 ;while true do if ((((0 -0) -0)==v344) or ((45 -14)>=(3187 -1789))) then v239=v239 + 1 ;v89[v342]=v237[v239];break;end end break;end end end break;end if ((3196<=(6598 -(1165 + 561))) and (v235==(1 + 0))) then v79=(v238 + v236) -(3 -2) ;v239=0 + 0 ;v235=2;end end break;end if (((3805 -(341 + (526 -(212 + 176))))==(898 + 2428)) and (v234==(1 -0))) then v237=nil;v238=nil;v234=328 -(89 + 237) ;end end end elseif (((4609 -3176)<=(8164 -4286)) and (v92>(918 -(581 + 300)))) then local v240=1220 -(855 + 365) ;local v241;local v242;while true do if ((v240==0) or ((3759 -(3081 -(250 + 655)))==(567 + 1168))) then v241=0 -0 ;v242=nil;v240=1236 -(1030 + 205) ;end if ((v240==(1 + 0)) or ((2774 + 207)==(2636 -((272 -116) + 130)))) then while true do if ((v241==0) or ((10147 -5681)<=((1298 -468) -337))) then v242=v91[2];v89[v242]=v89[v242]();break;end end break;end end else v89[v91[3 -1 ]]=v29(v84[v91[1 + 2 ]],nil,v62);end elseif ((v92<=(27 + 18)) or ((2616 -(10 + 59))<=(562 + 1425))) then if (((14582 -11621)>2740) and (v92<=(1204 -(671 + 492)))) then if (((2943 + 753)>=(4827 -(369 + (2802 -(1869 + 87))))) and (v92<=(11 + 28))) then v89[v91[2]]={};elseif ((v92==40) or ((2535 + 435)==(3823 -(1036 + (3152 -2243))))) then local v244=0;local v245;local v246;while true do if ((v244==(0 + 0)) or ((6200 -2507)<(2180 -(11 + 192)))) then v245=1901 -(484 + 1417) ;v246=nil;v244=1 + 0 ;end if ((v244==1) or ((1105 -(135 + 40))>(5090 -2989))) then while true do if (((2504 + 1649)>3086) and (v245==(0 -(0 -0)))) then local v308=0;while true do if ((v308==(1 -0)) or ((4830 -(50 + 126))<=(11277 -7227))) then v245=1 + 0 ;break;end if ((v308==(1413 -(1233 + 180))) or ((3571 -(522 + 447))<(2917 -(107 + 1314)))) then v246=v91[2];v79=(v246 + v90) -1 ;v308=1 -0 ;end end end if ((v245==(1 + 0)) or ((3108 -2088)>(972 + 1316))) then for v345=v246,v79 do local v346=0 -(773 -(48 + 725)) ;local v347;local v348;while true do if ((328==(1297 -969)) and (v346==(1911 -((1169 -453) + (3203 -2009))))) then while true do if (((26 + 1485)<3808) and (v347==0)) then v348=v87[v345-v246 ];v89[v345]=v348;break;end end break;end if ((v346==(0 + 0)) or ((3013 -(44 + 30 + 429))>(9488 -4569))) then v347=0 + 0 ;v348=nil;v346=2 -1 ;end end end break;end end break;end end else local v247=0 + 0 ;local v248;local v249;while true do if ((4763==((39239 -24556) -9920)) and (v247==(0 + 0))) then v248=0 -0 ;v249=nil;v247=434 -(279 + 154) ;end if ((4137>(2626 -(454 + 324))) and (v247==(1 + 0))) then while true do if (((2453 -(12 + 2 + 3))<=(1690 + 1444)) and (v248==(0 -0))) then v249=v91[2];v89[v249]=v89[v249](v13(v89,v249 + 1 + 0 ,v79));break;end end break;end end end elseif (((4816 -((1130 -(152 + 701)) + 816))==(15908 -12185)) and (v92<=(1226 -(1058 + 125)))) then if ((v92>(8 + 34)) or ((5021 -(815 + 160))>=4316)) then v89[v91[(1319 -(430 + 881)) -(3 + 3) ]]();else v78=v91[7 -4 ];end elseif ((v92==44) or ((480 + (2423 -(557 + 338)))<(5638 -3709))) then v89[v91[1900 -(41 + 1857) ]]=v89[v91[(561 + 1335) -((3443 -2221) + 671) ]][v89[v91[10 -(20 -14) ]]];elseif ((2384>(2550 -775)) and (v89[v91[1184 -(229 + 953) ]]~=v91[(4723 -2945) -(1111 + 663) ])) then v78=v78 + 1 ;else v78=v91[1582 -(874 + (1519 -814)) ];end elseif ((v92<=(7 + 41)) or (((3901 -(499 + 302)) + 1443)<=4376)) then if (((1513 -785)==(21 + 707)) and (v92<=(725 -(642 + 37)))) then v61[v91[3]]=v89[v91[2]];elseif ((v92==((877 -(39 + 827)) + (98 -62))) or ((173 + 903)>(11727 -7056))) then if (((2305 -(233 + 221))>=(874 -496)) and (v89[v91[2 + 0 ]]<v91[1545 -(718 + (1837 -1014)) ])) then v78=v78 + 1 + 0 ;else v78=v91[808 -((1056 -790) + (826 -287)) ];end elseif (v89[v91[2]] or (((473 + 5042) -3567)>=(4701 -(636 + 589)))) then v78=v78 + (2 -1) ;else v78=v91[5 -2 ];end elseif (((3800 + 994)>=(303 + 530)) and (v92<=(1065 -((1922 -1265) + 358)))) then if (((10829 -6739)==(9318 -5228)) and (v92>(1236 -(1151 + 6 + 30)))) then if ((v89[v91[2]]==v91[(5 -1) + (104 -(103 + 1)) ]) or (3758==(657 + 1841))) then v78=v78 + 1 ;else v78=v91[8 -5 ];end else local v253=0;local v254;local v255;while true do if ((v253==(1833 -(1552 + (834 -(475 + 79))))) or ((3507 -(64 + 770))<(1070 + 505))) then while true do if ((v254==0) or ((8446 -4725)<=1455)) then v255=v91[1 + 1 ];v89[v255](v13(v89,v255 + 1 ,v91[1246 -(157 + 1086) ]));break;end end break;end if ((934<(4543 -2273)) and (v253==(0 -0))) then v254=0 -0 ;v255=nil;v253=1;end end end elseif ((v92==(69 -18)) or ((2431 -(599 + 220))==1255)) then if ((v89[v91[3 -1 ]]~=v89[v91[1935 -(1813 + 118) ]]) or ((3182 + 1170)<(5423 -((1817 -976) + 376)))) then v78=v78 + (1 -(0 -0)) ;else v78=v91[1 + 2 ];end else v89[v91[(1 + 4) -3 ]]=v91[862 -(464 + 348 + 47) ]~=(0 -0) ;end v78=v78 + (1504 -(1395 + 108)) + 0 ;break;end if ((v99==(837 -((1358 -891) + 370))) or ((5910 -3050)<=((1337 -(7 + 1197)) + 48))) then local v110=0 -0 ;while true do if (((503 + 2719)>=1527) and ((0 -0)==v110)) then v91=v83[v78];v92=v91[521 -(150 + 370) ];v110=1283 -(74 + 1208) ;end if (((3701 -2196)<=(10059 -(3462 + 4476))) and (v110==1)) then v99=1 + 0 ;break;end end end end break;end end end end A,B=v27(v11(v82));if  not A[1] then local v100=0;local v101;while true do if (v100==0) then v101=v60[4][v78] or "?" ;error("Script error at ["   .. v101   .. "]:"   .. A[2] );break;end end else return v13(A,2,B);end end;end if (v63==0) then v64=v60[1];v65=v60[2];v63=1;end end end return v29(v28(),{},v17)(...);end vv9(),...);end
